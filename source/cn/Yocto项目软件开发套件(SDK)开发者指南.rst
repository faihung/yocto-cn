====================================================================
Yocto 项目软件开发套件（SDK）开发者指南
====================================================================

.. note::

   翻译进行中...

* 链接： `Yocto Project Application Devleoper's Guide <http://www.yoctoproject.org/docs/1.6.1/adt-manual/adt-manual.html>`_
* 版本：1.6.1
* 作者：Jessica Zhang jessica.zhang@intel.com
* 机构：Intel Corporation
* 版权：

    Copyright © 2010-2014 Linux Foundation

    Permission is granted to copy, distribute and/or modify this document under the terms of the Creative Commons Attribution-Share Alike 2.0 UK: England & Wales as published by Creative Commons.

1. 介绍
================================================


欢迎使用 Yocto 项目应用开发者指南。本手册提供了能够让您快速使用 Yocto 项目开发应用的相关信息。

Yocto 项目提供基于应用开发工具套件（ADT）的引用开发环境，以及可用的独立交叉开发工具链和其他工具。本手册主要介绍有关 ADT 相关的配置和安装，交叉开发工具链的访问和使用，开发包安装的定制，基于 Autotools 和 Makefile 项目的命令行开发，以及对 Eclipse IDE 的 Yocto 插件的介绍。

    
.. note::

    ADT 是中立发布，并不需要 Yocto 项目的参考发行版，即 Poky。本手册中所使用的示例使用了 Poky 发行版。
    

2. 准备应用开发环境
================================================

应用开发工具套件（ADT）属于 Yocto 项目开发解决方案中的一部分。ADT 提供了一个适用于开发以最终用户为目标的产品应用的定制构建，交叉开发平台。

基本上，ADT 包含了如下部分：

* 一个由 OpenEmpedded 构建系统构建的平台相关的交叉工具链和相应的 sysroot 。工具链和 sysroot 都基于 *元数据* 配置和扩展，允许您能够在主机上为目标硬件进行交叉开发。
* Eclipse IDE 的 Yocto 插件。
* Quick EMULator(QEMU)，允许您能够模拟目标硬件。
* 各种用户空间工具，用以增强您的应用开发体验。

2.1 交叉开发工具链
-------------------------------------------------

*交叉开发工具链* 包涵用于开发目标硬件用户空间引用的交叉编译器，链接器，以及调试器。该工具链由 ADT Installer 脚本，工具链安装脚本，或者基于用于您的目标设备的元数据配置和扩展的构建目录进行创建。交叉工具链和相匹配的目标 sysroot 搭配进行。

2.2. Sysroot
-------------------------------------------------

与目标设备相匹配的 sysroot 包涵生成目标平台可执行文件所需要的头文件和库。sysroot 基于由 OpenEmbedded 构建系统生成的目标 root 文件系统镜像，并且使用和构建交叉工具链相同的元数据配置。

2.3. Eclipse Yocto 插件
-------------------------------------------------

Eclipse IDE 是非常著名的开发环境，它完全支持 Yocto 项目的开发。当您在 Eclipse IDE 中安装或者配置 Yocto 项目插件时，您可以完全体验 Yocto 项目的开发。该扩展插件经过特别设计，安装和配置完成后将能够让您更容易的进行软件开发。这些扩展允许交叉编译，发布，以及在 QEMU 模拟会话中执行您的程序。您也可以执行交叉调试和优化。该环境同时还提供了一系列的工具，能够让您执行远程调试，跟踪，以及采集电源，延迟，性能等数据信息。

更多有关使用 Eclipse IDE 进行应用开发工作流程的信息以及有关 Yocto 项目插件的配置和安装的详细示例，可以查看 Yocto 项目开发手册的 **“使用 Eclipse 工作”** 部分。

2.4. QEMU 模拟器
-------------------------------------------------

QEMU 模拟器允许您在执行应用或者镜像时模拟您的硬件环境。QEMU 可以通过以下几种方式进行使用：

* 如果您使用 ADT 安装脚本来安装 ADT，您可以指定是否安装 QEMU。
* 如果您克隆了 poky 的 Git 源码库创建 *源目录* ，在您载入了环境设置脚本，QEMU 将会自动进行安装，并可供使用。
* 如果您下载了 Yocto 项目发行版本，并且将其解压创建 *源目录* ，在您载入了环境设置脚本，QEMU 将会自动安装，并可供使用。
* 如果您安装了交叉工具链压缩包，在您载入了工具链的设置环境脚本，QEMU 将会自动安装，并可供使用。

2.5. 用户空间工具
-------------------------------------------------

用户空间工具包含在发行包中。在开发过程中，您会发现这些工具非常有用。这些工具包括：LatencyTOP，PowerTOP，OProfile，Perf，SystemTap，以及 Lttng-ust。这些都是 Linux 平台的通用开发工具。

* LatencyTOP：
* PowerTOP：
* OProfile:
* Perf：
* SystemTap：
* Lttng-ust:

3. 准备安装环境
================================================

为了应用程序开发，您需要设置主机的开发环境。有多种方式可供您完成对交叉开发工具，QEMU，Eclipse 的 Yocto 项目插件，以及其他工具的安装。本节主要讲述如何准备应用开发环境。

3.1. 安装 ADT 及工具链
------------------------------------------------

3.1.1. 使用 ADT 安装器
************************************************

3.1.2. 使用交叉工具链压缩包
************************************************

3.1.3. 使用 BitBake 和 构建目录 
************************************************

3.2. 设置交叉开发环境
------------------------------------------------

3.3. 内核安全及文件系统镜像
------------------------------------------------

3.4. 可选构建工具链安装器
------------------------------------------------

4. 定制开发包安装
================================================

因为 Yocto 项目适用于嵌入式 Linux 开发，那么您将会需要定制您的开发包的安装方式。例如，如果您开发一个最小化的镜像，那么您可能不需要一些包（如图形支持包）。这样的话，您可能希望能够从您的 sysroot 中移除这些包。

4.1. 包管理系统
------------------------------------------------

OpenEmbedded 构建支持使用不同的包管理系统（PMS）生成 sysroot 文件：

* *OPKG:* 一个不是很知名的 PMS，最初面向于 OpenEmbedded 和 OpenWrt 嵌入式 Linux 项目。该包管理系统用于处理 .ipk 格式的打包文件。更多有关 OPKG 的信息请科普 `维基百科Opkg <http://en.wikipedia.org/wiki/Opkg>`_ 。
* *RPM:* 一个面向于 GNU/Linux 发行版的知名包管理系统。该包管理系统用于处理 .rms 格式的打包文件。目前构建系统默认通过该 PMS 安装软件。更多有关该包管理系统的信息请科普 `维基百科RPM <http://en.wikipedia.org/wiki/RPM_Package_Manager>`_ 。
* *Debian:* 面向于基于 Debian 的系统，基于很多的包管理工具。底层的包管理工具 dpkg 构成了 Debian 包管理的基础。更多有关信息请科普 `维基百科Dpkg <http://en.wikipedia.org/wiki/Dpkg>`_ 。

4.2. 配置包管理系统（PMS）
------------------------------------------------

不管您使用哪个包管理系统，您需要确保 *conf/local.conf* 文件中的 *PACKAGE_CLASSES* 变量设置并且应用于系统。

5. 使用命令行
================================================
